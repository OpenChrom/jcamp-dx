{\rtf1\ansi\deff1\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Nimbus Roman No9 L{\*\falt Times New Roman};}{\f1\froman\fprq2\fcharset0 Times{\*\falt Times New Roman};}{\f2\fnil\fprq1\fcharset0 Monospace;}{\f3\fnil\fprq0\fcharset0 Helvetica;}{\f4\froman\fprq2\fcharset0 Times{\*\falt Times New Roman};}{\f5\fnil\fprq1\fcharset128 Monospace;}{\f6\fnil\fprq2\fcharset0 AR PL ShanHeiSun Uni;}{\f7\froman\fprq2\fcharset0 Lucida;}{\f8\fnil\fprq2\fcharset0 Lucidasans;}{\f9\fswiss\fprq2\fcharset0 Lucidasans;}{\f10\fswiss\fprq0\fcharset0 Lucidasans;}}
{\colortbl;\red0\green0\blue0;\red127\green0\blue85;\red0\green0\blue192;\red128\green128\blue128;}
{\stylesheet{\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031\snext1 Normal;}
{\s2\sb240\sa120\keepn\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af8\afs28\lang255\ltrch\dbch\af6\langfe255\hich\f3\fs28\lang1031\loch\f3\fs28\lang1031\sbasedon1\snext3 Heading;}
{\s3\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031\sbasedon1\snext3 Body Text;}
{\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af10\afs24\lang255\ltrch\dbch\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031\sbasedon3\snext4 List;}
{\s5\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af10\afs20\lang255\ai\ltrch\dbch\af1\langfe255\hich\f1\fs20\lang1031\i\loch\f1\fs20\lang1031\i\sbasedon1\snext5 caption;}
{\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af10\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031\sbasedon1\snext6 Index;}
{\*\cs8\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1031\loch\fs24\lang1031 RTF_Num 2 1;}
{\*\cs9\cf0\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 Numbering Symbols;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\lang1031\fs24\fi-283\li283}{\listname RTF_Num 2;}\listid1}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls0}}

{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment StarWriter}{\vern6800}}\deftab709
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Standard;}}
{\*\pgdscno0}\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li283\ri0\lin283\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\fs24\lang1031\loch\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 For the revision history of this document, see the cvs. Authors: Stefan Kuhn}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li283\ri0\lin283\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\lang1031\f7\fs24\f9\lang1031\fs24 1.\tab}\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls0\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 History}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 The jcamp-dx library (referred to as jcamp-dx here) is a java library for reading and writing the JCAMP-DX format. A rough background on JCAMP-DX is this: \'84 The Joint Committee on Atomic and Molecular Physical Data started as a Task Force on Spectral Data 
Portability under the direction of Paul A. Wilks, Jr., at the}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 Pittsburgh Conference (Pittcon) of 1983. The scope of JCAMP was originally as follows: \'84The Joint Committee will generate, collect, evaluate, edit, and approve the publication and encourage the distribution of atomic and molecular physical data in suitable
 form to serve as references for pure compounds and mixtures" (personal}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 communication from Bob McDonald). JCAMP (the organization) was initially sponsored by: American Chemical Society (ACS), American Physical Society (APS), American Society for Mass Spectrometry (ASMS), American Society for Testing and Materials (ASTM), Optic
al Society of America (OAS), Society for Applied Spectroscopy (SAS), and Spectroscopy Society of Canada (SSC). The objective of the Task Force}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 was to design a standard file format for exchange of infrared spectra between vendor data systems that used different proprietary file formats. Data exchange capability was in demand by end-users who wished to transfer spectra between different spectromete
rs in their own and other laboratories.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 In 1995 IUPAC took over responsibility for the JCAMP-DX range of scientific standards from the Joint Committee on Atomic and Molecular Physical Data (JCAMP). At that time an IUPAC Working Party had responsibility for the support and development of the JCAM
P-DX scientific data standards and this evolved into the Subcommittee for Electronic Data Standards (SEDS). All spectral data is stored as labeled fields of variable length using ASCII characters. The JCAMP-DX file is thus a text file that is human readabl
e and can be edited and annotated using standard}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 text editors.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 The JCAMP-DX format has many advantages. It is open-source, using standard terms, so that data from any instrument, or simulated data, can be freely exchanged. Non-proprietary software is available for conversion from other file formats, file compression, 
internet transmission and visualization of the data. One criticism of the JCAMP-DX standard is that \'84the specifications are both complicated and}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 incomplete. As the documentation grew to allow other types of instrument data, peak table data, and chemical structures, among other things, programmers had trouble interpreting how the tags should be used to write out their data. This led to the situation
 where JCAMP files created by a given software system could not be read by any other system because of inconsistent software implementations. This}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 was exacerbated by the fact that there was (and still is) no way of validating the adherence to the JCAMP standards for files created by different software packages. There is no testing software available, and there is no overseeing body organizing round-r
obin testing among the vendors and policing their efforts.\'93 (An XML-Based File Format for Archival Storage of Analytical Instrument Data, http://www.gaml.org/Documentation/XML%20Analytical%20Archive%20Format.pdf) Despite this essentially all spectroscopic 
instruments currently available have routines for the export of JCAMP-DX files, which work well due to long usage in the practical world and improvements based on that.\'93 (quoted from Kuhn et al., Chemical Markup, XML, and the World Wide Web. 7. CMLSpect, a
n XML vocabulary for spectral data, forthcoming).}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 This library is intended as a reference implementation of a library for reading of the JCAMP-DX standard. It should work for all JCAMP-DX files up to version 5 (JCAMP-DX 6 is still in draft status).}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 It was originally written by Thomas Weber from Creon Lab Control and is now maintained as a project on sourceforge. The sourceforge.net/projects/jcamp-dx site should always contain the latest informations.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\lang1031\f7\fs24\f9\lang1031\fs24 2.\tab}\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls0\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 Usage}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 The project can be checked out from CVS at sourceforge.net/projects/jcamp-dx. If a release is published, we also do binary and source file releases. The project has an ant file for compiling and building. The targets are:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 -clean: deletes all files created by ant}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 -init: creates some directories}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 -compile: comiles the java files to build}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 -dist: makes a JcampParser.jar in dist. This can be used as library in other projects}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 -javadoc: creates a javadoc in doc/api}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 -antlr: this generates lexer and parser files via antlr from .g-files in project root directory}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\lang1031\f7\fs24\f9\lang1031\fs24 3.\tab}\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls0\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 Code Examples}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 The main purpose of the library is to read and to write JCAMP-DX files. The classes in org.jcamp.spectrum are the objects read/written. So you will always use these.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 3.1 Reading a file}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 Let's look at a first example: You have a jcamp file and want to read the peaks from it. So firstly you read the file \'96  the class to use is JCAMPReader in org.jcamp.parser like this:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch     }{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 Spectrum jcampSpectrum = JCAMPReader.{\rtlch\ltrch\dbch\hich\i\loch\i getInstance}().createSpectrum(jcamp);}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch     }{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 NMRSpectrum nmrspectrum = (NMRSpectrum) jcampSpectrum;}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 JCAMPReader is a singleton, it returns one of the subclasses of Spectrum. Here we know the spectrum is an NMR one, so we can directly cast it. Have a look at the api doc to see the different types of spectra and their inheritance relationships. Then we loo
k if the spectrum has got peaks:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031{\rtlch \ltrch\loch\cf1     }{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b if}}{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf1  (nmrspectrum.hasPeakTable()) \{}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch       }{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 Peak[] peaks = nmrspectrum.getPeakTable();}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031{\rtlch \ltrch\loch\cf1       }{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b for}}{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf1  (}{\cf2\rtlch\ltrch\dbch\hich\b\loch\b int}{\cf1  i = 0; i < peaks.}{\cf3 length}{\cf1 ; i++) \{}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031{\rtlch \ltrch\loch\cf1         }{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 ...{\cf1  = (}{\cf2\rtlch\ltrch\dbch\hich\b\loch\b float}{\cf1 ) peaks[i].getPosition()[0];}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031{\cf1{\rtlch \ltrch\loch         }}{\cf1{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 ... = (}}{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b float}{\cf1 ) peaks[i].getHeight();}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch       }{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 \}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch     }{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 \}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs24\lang255\ltrch\dbch\af2\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 If it has peaks (remember JCAMP-DX can also contain continuous data), it's an array of Peak objects. Each peak has a got a multi-dimensional position (for 2D etc. spectra) and a height. In case of our nmr spectrum, these would be shift and intensity, so we
 read them to any variable (... is your code).}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs24\lang255\ltrch\dbch\af2\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs24\lang255\ltrch\dbch\af2\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 A JCAMP-DX file can contain several blocks (a block basically is a spectrum). In such a case, the above code will only return the first child block. In order to access all blocks, you can use {\rtlch\ltrch\dbch\hich\f5\fs20\loch\f5\fs20 JCAMPReader.getInstance().getRootblock()!=null }to check if it is
 a multi block file. If so, use something like this to read them:}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs24\lang255\ltrch\dbch\af2\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031 {\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0 Enumeration blocks=JCAMPReader.getInstance().getRootblock().getBlocks();}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031{\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b while}}{\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0{\cf1 (blocks.hasMoreElements())\{}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031 {\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0 \tab JCAMPBlock b = (JCAMPBlock) blocks.nextElement();}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031{\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0{\cf1 \tab }}{\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b if}{\cf1 (b.getID()!=JCAMPReader.getInstance().getIdoffirstspectrum())\{}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031 {\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0 \tab \tab Spectrum spectrum2=JCAMPReader.getInstance().createSpectrum(JCAMPReader.getInstance().rootblock, b.getID());}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031{\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0{\cf1 \tab \tab }}{\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b if}{\cf1 (spectrum2.isFullSpectrum())}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031 {\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0 \tab \tab \tab cmlSpectrum.addSpectrumData(mapContData((Spectrum1D)spectrum2));}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031{\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0{\cf1\rtlch\ltrch\dbch\hich\b\loch\b \tab \tab }}{\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b else}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031 {\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0 \tab \tab \tab cmlSpectrum.addPeakList(mapPeaks((Spectrum1D)spectrum2));}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031{\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0{\cf1 \tab \tab }}{\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b break}{\cf1 ;}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031 {\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0 \tab \}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs20\lang1031\loch\f5\fs20\lang1031 {\rtlch \ltrch\loch\f5\fs20\lang1031\i0\b0 \}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs24\lang255\ltrch\dbch\af2\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs24\lang255\ltrch\dbch\af2\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 (idoffirstspectrum contains the id of the spectrum we already get \'84directly\'93).}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs24\lang255\ltrch\dbch\af2\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs24\lang255\ltrch\dbch\af2\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 3.2 Writing Files}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\ltrch\dbch If you want to do it the other way round (i. e. write a file), you first need to build a Spectrum (look at the javadoc to see what parameters mean):}}{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 \line }
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b \tab \tab \tab double}}{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 [][] xy = new Double[2][peaknumber];}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 \tab \tab \tab //this array needs to be filled with x/y values in 0/1 position respectivly}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf1 \tab \tab \tab IOrderedDataArray1D x = }}{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b new}{\cf1  OrderedArrayData(xy[0],CommonUnit.}{\cf3\rtlch\ltrch\dbch\hich\i\loch\i mz}{\cf1 );}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf1 \tab \tab \tab IDataArray1D y = }}{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b new}{\cf1  ArrayData(xy[1], CommonUnit.}{\cf3\rtlch\ltrch\dbch\hich\i\loch\i intensity}{\cf1 );}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf1 \tab \tab \tab Spectrum1D }}{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf3\rtlch\ltrch\dbch\hich\i\loch\i jdxspectrum}{\cf1  = }{\cf2\rtlch\ltrch\dbch\hich\b\loch\b new}{\cf1  NMRSpectrum(x, y, nucleus, freq, reference, }{\cf2\rtlch\ltrch\dbch\hich\b\loch\b true}{\cf1 );}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs24\lang255\ltrch\dbch\af2\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 Then we set peaks on it (indeed values are given twice to the writer \'96 a bit confusing, admittedly):}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 \tab \tab \tab Peak1D[] jcampPeaks = {\cf2\rtlch\ltrch\dbch\hich\b\loch\b new} Peak1D[5];}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf1 \tab \tab \tab Peak1D jcampPeak = }}{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf2\rtlch\ltrch\dbch\hich\b\loch\b new}{\cf1  Peak1D(x,y);}}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 \tab \tab \tab jcampPeak.setHeight(y);}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af7\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 \tab \tab \tab jcampPeaks[0] = jcampPeak;}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 \tab \tab \tab ... for all peaks}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0{\cf3\rtlch\ltrch\dbch\hich\i\loch\i \tab \tab \tab jdxspectrum.}}{\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 setPeakTable(jcampPeaks);}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs24\lang255\ltrch\dbch\af2\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 Finally we write it:}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 \tab \tab \tab JCAMPWriter jcamp = JCAMPWriter.{\rtlch\ltrch\dbch\hich\i\loch\i getInstance}();}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 {\rtlch \ltrch\loch\f2\fs20\lang1031\i0\b0 \tab \tab \tab String jcampString = jcamp.toJCAMP(jdxspectrum);}
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs20\lang255\ltrch\dbch\af2\langfe255\hich\f2\fs20\lang1031\loch\f2\fs20\lang1031 
\par \pard\plain \ltrpar\s1\cf1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af2\afs24\lang255\ltrch\dbch\af2\langfe255\hich\f1\fs24\lang1031\loch\f1\fs24\lang1031 {\rtlch \ltrch\loch\f1\fs24\lang1031\i0\b0 For specific questions, please consult the javadoc.}
\par }